% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coverage_functions.R
\name{get_coverage}
\alias{get_coverage}
\title{Retrieves the coverage data for a given transcript}
\usage{
get_coverage(
  ribo.object,
  name,
  range.lower = rangeLower(ribo.object),
  range.upper = rangeUpper(ribo.object),
  length = TRUE,
  tidy = FALSE,
  alias = FALSE,
  compact = TRUE,


  experiments = get_experiments(ribo.object)
)
}
\arguments{
\item{ribo.object}{A 'ribo' object}

\item{name}{Name of the transcript}

\item{range.lower}{Lower bound of the read length}

\item{range.upper}{Upper bound of the read length}

\item{length}{Logical value that denotes if the coverage should be summed across read lengths}

\item{tidy}{Logical value denoting whether or not the user wants a tidy format}

\item{alias}{Option to report the transcripts as aliases/nicknames}

\item{compact}{Option to return a DataFrame with Rle and factor as opposed to a raw data.frame}

\item{experiments}{List of experiments to obtain coverage information on}
}
\value{
A data table containing the coverage data
}
\description{
The function \code{\link{get_coverage}} generates a DataFrame of coverage
data over the length of a given transcript.
}
\details{
The function \code{\link{get_coverage}} first checks the experiments in the
'experiments' parameter to see if they are present in the .ribo file.
It will then check these experiments for coverage data which is an optional
dataset. As a result, this function safe guards against experiments that
do not have coverage data, but it also, by default, includes all of the
experiments in a file in the experiments' parameter.

The function checks the coverage of one transcript at a time at
each read length from 'range.lower' to 'range.upper', inclusive. However,
the parameter 'length' allows the user to obtain the coverage
information of a transcript across the range of read lengths indicated by
'range.lower' and 'range.upper'.

If the ribo.object is generated with aliases, the 'alias' parameter, if set to TRUE,
allows the user to use the alias of the transcript as the 'name' parameter instead of
the original transcript name.
}
\examples{
#generate the ribo object
file.path <- system.file("extdata", "sample.ribo", package = "ribor")
sample <- create_ribo(file.path)

#get the experiments of interest that also contain coverage data
experiments <- c("Hela_1", "Hela_2", "Hela_3", "WT_1")

#the ribo file contains a transcript named 'MYC'
coverage.data <- get_coverage(ribo.object = sample,
                              name = "MYC",
                              range.lower = 2,
                              range.upper = 5,
                              length = TRUE,
                              experiments = experiments)

}
\seealso{
\code{\link{ribo}} to generate the necessary ribo.object parameter
}
